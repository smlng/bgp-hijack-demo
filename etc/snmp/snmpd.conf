###########################################################################
#
# snmpd.conf
#
#   - created by the snmpconf configuration program
#
###########################################################################
# SECTION: Agent Operating Mode
#
#   This section defines how the agent will operate when it
#   is running.

# master: Should the agent operate as a master agent or not.
#   Currently, the only supported master agent type for this token
#   is "agentx".
#   
#   arguments: (on|yes|agentx|all|off|no)

master  agentx
#agentXSocket 	udp:localhost:705
agentXSocket 	/var/agentx/master 
#agentXPerms 777 777 

###########################################################################
# SECTION: Access Control Setup
#
#   This section defines who is allowed to talk to your running
#   snmp agent.

# rocommunity: a SNMPv1/SNMPv2c read-only access community name
#   arguments:  community [default|hostname|network/bits] [oid]

rocommunity  public  

# rwcommunity: a SNMPv1/SNMPv2c read-write access community name
#   arguments:  community [default|hostname|network/bits] [oid]

rwcommunity  private  

###############################################################################
#
#  EXTENDING THE AGENT
#

#
#  Arbitrary extension commands
#

#  Note that this last entry requires the script '/tmp/shtest' to be created first,
#    containing the same three shell commands, before the line is uncommented

#  Walk the NET-SNMP-EXTEND-MIB tables (nsExtendConfigTable, nsExtendOutput1Table
#     and nsExtendOutput2Table) to see the resulting output

#  Note that the "extend" directive supercedes the previous "exec" and "sh" directives
#  However, walking the UCD-SNMP-MIB::extTable should still returns the same output,
#     as well as the fuller results in the above tables.

#  "Pass-through" MIB extension command
#

# set / unset prefix
 pass	.1.3.6.1.4.1.8072.2.264	 	<path/to/repo>/src/python/snmp/announce.py
 pass	.1.3.6.1.4.1.8072.2.265	 	<path/to/repo>/src/python/snmp/disannounce.py

# get routing table
 pass	.1.3.6.1.4.1.8072.2.267	 	<path/to/repo>/src/python/snmp/getRoutingTable.py

# get announced prefixes
 pass	.1.3.6.1.4.1.8072.2.269	 	<path/to/repo>/src/python/snmp/getPrefixes.py

# get bgp neighbors
 pass	.1.3.6.1.4.1.8072.2.270	 	<path/to/repo>/src/python/snmp/getBgpNeighbors.py

# Note that this requires one of the two 'passtest' scripts to be installed first,
#    before the appropriate line is uncommented.
# These scripts can be found in the 'local' directory of the source distribution,
#     and are not installed automatically.

#  Walk the NET-SNMP-PASS-MIB::netSnmpPassExamples subtree to see the resulting output
